import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'scala'
//apply plugin: 'curseforge'


group = "mrtjp"
archivesBaseName = "MrTJPCore"

ext.configFile = file "build.properties"
configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    //Referred to as 'config' or 'project.config'
    project.ext.config = new ConfigSlurper().parse prop
}

configurations {
    deployerJars
}

repositories {
    maven {
        name "chickenbones"
        url "http://chickenbones.net/maven/"
    }
}

dependencies {
    deployerJars "org.apache.maven.wagon:wagon-ftp:2.2"
    compile "codechicken:CodeChickenLib:${config.mc_version}-${config.ccl_version}:deobf"

    compile "org.scala-lang:scala-compiler:${config.scala_version}"
    compile "org.scala-lang:scala-library:${config.scala_version}"
    compile "org.scala-lang.modules:scala-java8-compat_${config.scala_compat_version}"
    compile "net.minecraftforge:Scorge:${config.scorge_version}"
}

def build_number = project.hasProperty("manualbuildnum") ? project.manualbuildnum : (System.getenv("BUILD_NUMBER") ?: "1")
version = "${project.config.mod_version}." + build_number
println "Starting build for $archivesBaseName $version for MC $config.mc_version-$config.forge_version"

minecraft {
    version = config.mc_version + "-" + config.forge_version
    mappings = config.mappings
    runDir = "run"
    makeObfSourceJar = false
}

//sourceSets {
//    main {
//        def root = project.projectDir
//        scala {
//            srcDir new File(root, "src")
//        }
//        resources {
//            srcDir new File(root, "resources")
//        }
//    }
//}

processResources {
    //redo task if any of these properties change
    inputs.property "version", project.version
    inputs.property "mc.version", config.mc_version

    // Replace properties in all files
    from(sourceSets.main.resources.srcDirs) {
        include '**.info'
        expand  'mod_version': version, 'mc_version': config.mc_version,
                'forge_version': config.forge_version,
                'ccl_version': config.ccl_version.replace(".+", "")
        filter(ReplaceTokens, tokens: [
                'VERSION'      : config.mod_version,
                'BUILD_NUMBER' : build_number,
                'MC_VERSION'   : config.mc_version,
                'FORGE_VERSION': config.forge_version,
                'CCL_VERSION'  : config.ccl_version
        ])
    }
    // Copy everything else
    from(sourceSets.main.resources.srcDirs) {
        include 'assets/**/*.*'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jar {
    classifier = 'universal'
}

// Enable experimental features for scala compiler
tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-Xexperimental"]
    scalaCompileOptions.setDeprecation false
}

artifacts {
    archives deobfJar
    archives srcJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty("local_maven")) {
                repository(url: "file://${local_maven}")
                pom {
                    groupId = project.group
                    version = "${project.minecraft.version}-${project.version}"
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description project.archivesBaseName
                        url 'https://github.com/MrTJP/' + project.archivesBaseName

                        scm {
                            url 'https://github.com/MrTJP/' + project.archivesBaseName
                            connection 'scm:git:git://github.com/MrTJP/' + project.archivesBaseName + '.git'
                            developerConnection 'scm:git:git@github.com:MrTJP/' + project.archivesBaseName + '.git'
                        }

                        issueManagement {
                            system 'github'
                            url 'https://github.com/MrTJP/' + project.archivesBaseName + '/issues'
                        }

                        licenses {
                            license {
                                name 'GNU Lesser Public License (GPL), Version 2.1'
                                url 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'mrtjp'
                                name 'mrtjp'
                                roles { role 'developer' }
                            }
                        }
                    }
                }
            }
        }
    }
}

/*if (project.hasProperty('curseapi')) {
    curse {
        projectId = '229002'
        apiKey = project.curseapi
        releaseType = 'release'

        additionalArtifact deobfJar
        additionalArtifact sourceJar
    }
}*/
